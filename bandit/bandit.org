#+TITLE: Bandit

Tools pre-installed on Bandit server:
+ gef (https://github.com/hugsy/gef) in /usr/local/gef/
+ pwndbg (https://github.com/pwndbg/pwndbg) in /usr/local/pwndbg/
+ peda (https://github.com/longld/peda.git) in /usr/local/peda/
+ gdbinit (https://github.com/gdbinit/Gdbinit) in /usr/local/gdbinit/
+ pwntools (https://github.com/Gallopsled/pwntools)
+ radare2 (http://www.radare.org/)
+ checksec.sh (http://www.trapkit.de/tools/checksec.html) in /usr/local/bin/checksec.sh

* Level 0->1
ls -a
cat readme
--> boJ9jbbUNNfktd78OOpsqOltutMc3MY1

* Level 1->2
ls -a
cat /home/bandit1/-
--> CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

* Level 2->3
ls -a
cat 'spaces in this filename'
--> UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK
i
* Level 3->4
ls -a
cd inhere
ls -a
cat .hidden
--> pIwrPrtPN36QITSp3EQaw936yaFoFgAB

* Level 4->5
ls -a
cd inhere
ls -a
cat /home/bandit/4/inhere/-file07
--> pIwrPrtPN36QITSp3EQaw936yaFoFgAB

* Level 5-6
ls -a
cd inhere
find . -size 1033c
    # or: find -size 1033c ! -executable
--> pIwrPrtPN36QITSp3EQaw936yaFoFgAB

* Level 6-7
find / -group bandit6 -user bandit7 -size 33c 2>/dev/null
--> HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

* Level 7->8
ls -a
cat data.txt | grep 'millionth'
--> cvX2JJa4CFALtqS87jk27qwqGhBM9plV

* Level 8->9
ls -a
sort data.txt | uniq -u
--> UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

* Level 9->10
ls -a
strings data.txt | grep "==="
--> truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk

* Level 10-11
ls -a
cat data.txt
base64 -d data.txt
--> IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

* Level 11-12
ls -a
cat data.txt | tr '[a-zA-Z]' '[n-za-mN-ZA-M]'
-->  5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

* Level 12-13
ls -a
cat data.txt
mkdir /tmp/bones
cp data.txt /tmp/bones
cd /tmp/bones
xxd -r data.txt > file.bin
file file.bin
mv file.bin data2.gz
gzip -d data2.gz
file data2
mv data2 data3.bz | bzip -2 data3.bz
file data3
mv data3 data4.gz
gzip -d data4.gz
file data4
mv data4 data5.tar
tar -xf data5.tar
file data5.bin
mv data5.bin data6.tar
tar -xf data6.tar
ls
file data6.bin
mv data6.bin data7.bz
bzip2 -d data7.bzip
ls
file data7
mv data7 data8.tar
tar -xf data8.tar
ls
file data8.bin
mv data8.bin data9.gz
gzip -d data9.gz
ls
file data9
cat data9
--> 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

* Level 13->14
ls -a
ssh - sshkey.private bandit14@localhost
cat /etc/bandit_pass/bandit14
--> 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e

* Level 14->15
telnet localhost 30000
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
    # this is the password from the previous level you paste and enter
--> BfMYroe26WYalil77FoDi9qh59eK5xNr

* Level 15->16
openssl s_client -ign_eof -connect localhost:30001
BfMYroe26WYalil77FoDi9qh59eK5xNr
    # this is the password from the previous level you paste and enter
--> :cluFn7wTiGryunymYOu4RcffSxQluehd

* Level 16->17
nmap -p 31000-32000 -sV localhost
echo cluFn7wTiGryunymYOu4RcffSxQluehd | openssl s_client -quiet -connect localhost:31790
# copy the RSA key
mkdir /tmp/bones
cd /tmp/bones
vim sshkey.private
# paste in RSA key and :wq
chmod 600 sshkey.private
ssh -i ./sshkey.private bandit17@localhost
 # picking up from our previous steps...
 cat /etc/bandit_pass/bandit17
 --> xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn

* Level 17->18
ls -a
diff passwords.new passwords.old
--> kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd

* Level 18->19
# asshole move...
ssh bandit18@bandit.labs.overthewire.org -p 2220 "bash --norc"
# since we disabled bash, we won't see much - linux commands will still function, so...
ls -a
cat readme
--> IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x

* Level 19->20
ls -a
./bandit20-do
./bandit20-do id
./bandit20-do cat /etc/bandit_pass/bandit20
--> GbKksEFF4yrVs6il55v6gwY5aVje5f0j

* Level 20->21
ls -a
echo "gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr" | nc -l localhost -p 61337 &
ps aux
# confirm user/PID/command match with the returned PID
./suconnect 61337
--> gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr

* Level 21->22
ls -a
cd /etc/cron.d/
ls -a
cat cronjob_bandit22
cat /usr/bin/cronjob_bandit22.sh
cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
--> Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

* Level 22->23
ls -a
cd /etc/cron.d/
ls -a
cat cronjob_bandit23
cat /usr/bin/cronjob_bandit23.sh
# run the echo
echo I am user bandit23 | md5sum | cut -d ' ' -f 1
cat /tmp/8ca319486bfbbc3663ea0fbe81326349
--> jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n

* Level 23-34
ls -a
cd /etc/cron.d/
ls -a
cat cronjob_bandit24
cat /usr/bin/cronjob_bandit24.sh
mkdir /tmp/bones
chmod 777 /tmp/bones
cd /tmp/bones
vim bandit24.sh
        #!/bin/bash

        cat /etc/bandit_pass/bandit24 > /tmp/bones/bandit24_flag
chmod 777 bandit24.sh
cp bandit24.sh /var/spool/bandit24/
# wait about a minute...
ls -al
# from the /tmp/bones directory, you should see the bandit24_flag was last modified by bandit24, then...
cat bandit24_flag
--> UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ

* Level 24->25
vim bandit_bruteforce.py
# see bandit_bruteforce.py in this repository for code used
python ./bandit_bruteforce.py
--> uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG

* Level 25->26
# this one is a little tricky, so open a dedicated terminal window without running tmux.
ls -a
# we'll use bandit26.sshkey in a second, first...
cat /etc/passwd | grep bandit26
cat /usr/bin/showtext
# sh, not bash. Shrink Konsole down to only 5 lines, then SSH into bandit 26
ssh -i bandit26.sshkey bandit26@localhost
v
# this should take you into vim and 'activate' the "more ~/text.txt" line for you to exploit
:r /etc/bandit_pass/bandit26
--> 5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z

* Level 26->27
# don't exit from where you're at. If you did, get back into vim in the previous level on the same file and run...
:set shell=/bin/bash
:shell
ls
./bandit27-do cat /etc/bandit_pass/bandit27
--> 3ba3118a22e93127a4ed485be72ef5ea

* Level 27->28
mkdir /tmp/bones
cd /tmp/bones
git clone ssh://bandit27-git@localhost/home/bandit27-git/repo
# the password is the same as for bandit 27
ls
cd repo
ls
cat README
--> 0ef186ac70e04ea33b4c1853d2526fa2

* Level 28->29
mkdir /tmp/bones
cd /tmp/bones
git clone ssh://bandit28-git@localhost/home/bandit28-git/repo
# the password is the same as for bandit 28
ls
cd repo
ls
cat README
# our password has been screened, so time to get nosy...
git log
# the commit to fix the "info leak" sounds promising. Let's see what was available before that that was fixed...
git checkout c086d11a00c0648d095d04c089786efef5e01264
cat README.md
--> bbc96594b4e001778eee9975372716b2

* Level 29-30
mk dir /tmp/bones
cd /tmp/bones
git clone ssh://bandit29-git@localhost/home/bandit29-git/repo
ls
cd repo
ls
cat README.md
# "no files in production", and the 'git log' command doesn't provide anything of value. Let's look elsewhere...
git branch
git branch -r
git checkout dev
get branch
git log -p -1
--> 5b90576bedb2cc04c86a9e924ce42faf

* Level 30->31
mkdir /tmp/bones
cd /tmp/bones
git clone ssh://bandit29-git@localhost/home/bandit29-git/repo
ls
cd repo
ls
cat README.md
# that's a little rude. We know it's not anything we've used previously, so...
git tag
git show secret
--> 47e603bb428404d265f59c42920d81e5

* Level 31->32
mkdir /tmp/bones
cd /tmp/bones
git clone ssh://bandit31-git@localhost/home/bandit31-git/repo
ls
cd repo
ls
cat README.md
# follow the instructions in the readme...
git branch
# we're in the master branch, where we need to be
vim key.txt
# enter in 'May I come in?'
:wq
git add key.txt
# our attempt to add was ignored by a .gitignore file, so...
ls -al
cat .gitignore
rm .gitignore
git add key.txt
git commit -m "Upload a file"
git push origin master
--> 56a9bf19c63d650ce78e6ec0354ee45e

* Level 32->33
# to get out of upper case hell...
$0
pwd
ls -al
cat /etc/bandit_pass/bandit33
--> c9c3199ddf4121b10cf581a98d51caee

* Level 33->34
# that's all she wrote.
